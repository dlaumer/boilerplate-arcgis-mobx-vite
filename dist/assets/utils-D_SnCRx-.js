import{bC as z,bD as C,g as O,dX as Y,b2 as A,bp as D,dY as G,dZ as v,d_ as R,s as E,d$ as S}from"./index-PAhymuf7.js";import{j as V}from"./quantizationUtils-BGKUE1Kx.js";import{$ as _}from"./utils-D615TF1y.js";import{m as j,B as L}from"./utils-hSE5r_SA.js";let c=null;const P=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function Z(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function W(e,t,n,i){const r=Y(n)?A(n):null,s=r?Math.round((r.valid[1]-r.valid[0])/t.scale[0]):null;return e.map(a=>{const l=new D(a.geometry);return V(t,l,l),a.geometry=r?Z(l,s??0,i[0]):l,a})}function ee(e,t=18,n,i,r){const s=new Float64Array(i*r);t=Math.round(S(t));let a=Number.POSITIVE_INFINITY,l=Number.NEGATIVE_INFINITY;const I=G(n);for(const{geometry:p,attributes:F}of e){const{x:y,y:f}=p,$=Math.max(0,y-t),N=Math.max(0,f-t),M=Math.min(r,f+t),b=Math.min(i,y+t),h=+I(F);for(let m=N;m<M;m++)for(let d=$;d<b;d++){const w=m*i+d,x=R(d-y,m-f,t)*h,u=s[w]+=x;a=Math.min(a,u),l=Math.max(l,u)}}return{min:a,max:l}}function k(e){const t=P.exec(e);if(!t)return null;const{hh:n,mm:i,ss:r,ms:s}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(r)*v.seconds+Number(s||0)}async function te(e,t,n=!0){if(!t)return[];const{field:i,field2:r,field3:s,fieldDelimiter:a,fieldInfos:l,timeZone:I}=e,p=i&&(l==null?void 0:l.find(u=>u.name.toLowerCase()===i.toLowerCase())),F=!!p&&z(p),y=!!p&&_(p),f=e.valueExpression,$=e.normalizationType,N=e.normalizationField,M=e.normalizationTotal,b=[],h=e.viewInfoParams;let m=null,d=null;if(f){if(!c){const{arcadeUtils:u}=await C();c=u}c.hasGeometryOperations(f)&&await c.enableGeometryOperations(),m=c.createFunction(f),d=h?c.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new O(h.spatialReference)}):null}const w=e.fieldInfos,x=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&w?{fields:w}:null;return t.forEach(u=>{const g=u.attributes;let o;if(f){const T=x?{...u,layer:x}:u,U=c.createExecContext(T,d,I);o=c.executeFunction(m,U)}else g&&(o=g[i],r?(o=`${j(o)}${a}${j(g[r])}`,s&&(o=`${o}${a}${j(g[s])}`)):typeof o=="string"&&n&&(y?o=o?new Date(o).getTime():null:F&&(o=o?k(o):null)));if($&&typeof o=="number"&&isFinite(o)){const T=g&&parseFloat(g[N]);o=L(o,$,T,M)}b.push(o)}),b}function ne(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let r;return n==="field"?r="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(r=`(${t} > 0)`),r}function ie(e,t,n){const i=t!=null?e+" >= "+t:"",r=n!=null?e+" <= "+n:"";let s="";return s=i&&r?q(i,r):i||r,s?"("+s+")":""}function q(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function re(e,t){if(e&&e.spatialRelationship!=="intersects")return new E(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function oe(e,t,n){const i=B({layer:e,fields:t});if(i.length)return new E(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const r=X({layer:e,fields:t});return r.length?new E(n,"Unsupported fields: "+r.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function B(e){const t=e.layer;return e.fields.filter(n=>!t.getField(n))}function X(e){const t=e.layer;return e.fields.filter(n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics})}export{ne as F,k as I,re as M,ie as N,oe as T,q as U,te as b,ee as w,W as x};
